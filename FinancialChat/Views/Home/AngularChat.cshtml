@using FinancialChat.Models
@using Microsoft.AspNet.Identity
@{
    ViewBag.Title = "AngularChat";
}

<h2>Angular version Chat</h2>
<input type="hidden" id="userid" value="@User.Identity.GetUserId()" />
<input type="hidden" id="displayname" value="@(new ApplicationDbContext().Users.Find(User.Identity.GetUserId()).FullName)" />
<input type="hidden" id="chatroomid" value="@Model.Id" />
<input type="hidden" id="chatroomname" value="@Model.Name" />
<input type="hidden" id="apiurl" value="@(string.Format("{0}://{1}{2}api/posts/{3}", Request.Url.Scheme, Request.Url.Authority, Url.Content("~"), Model.Id))"/>
<app-root></app-root>

@section scripts
{
    <!--Script references. -->
    <!--The jQuery library is required and is referenced by default in _Layout.cshtml. -->
    <!--Reference the SignalR library. -->
    <script src="~/Scripts/jquery.signalR-2.2.2.min.js"></script>
    <!--Reference the autogenerated SignalR hub script. -->
    <script src="~/signalr/hubs"></script>
    <!--SignalR script to update the chat page and send messages.-->
    <script>
        // Reference the auto-generated proxy for the hub.
        var chat = $.connection.chatHub;
        $(function () {
            chat.client.addNewMessageToPage = function (time, name, message) {
                console.log(time, name, message);
                receiveMessage(time, name, message);
            };
            // Start the connection.
            $.connection.hub.start().done(function () {
                // Join Chat Room
                chat.server.joinRoom($('#chatroomname').val(), $('#displayname').val());
            });

        });

        function sendMessageToBackend(message) {
            var messageModel = {
                userid: $('#userid').val(),
                username: $('#displayname').val(),
                roomid: $('#chatroomid').val(),
                roomname: $('#chatroomname').val(),
                message: message
            }
            chat.server.send(messageModel, $('#chatroomname').val());
        }

        window.onbeforeunload = function (event) {
            chat.server.leaveRoom($('#chatroomname').val(), $('#displayname').val());
        }

        // This function sends the data from Angular to the backend
        function sendMessage(message) {
            sendMessageToBackend(message);
        }

        // This function receive the data from the backend and then send it to Angular
        function receiveMessage(time, name, message) {
            window.angularComponentReference.zone.run(() => { window.angularComponentReference.loadAngularFunction(time, name, message); });
        }
    </script>

    @Scripts.Render("~/bundles/chatangular")
}
